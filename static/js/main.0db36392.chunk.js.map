{"version":3,"sources":["store/actions.ts","store/index.ts","store/selectors.ts","components/CurrentUser/CurrentUser.tsx","api/todos.ts","api/user.ts","components/TodosList/TodosList.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","INPUT_VALUE","SELECT_VALUE","loadTodosAction","payload","type","loadUserAction","initialState","todos","user","inputValue","selectValue","store","createStore","state","action","getTodosSelector","getUserSelector","getInputValue","getSelectValue","CurrentUser","dispatch","useDispatch","useSelector","className","name","email","phone","onClick","API_URL","getTodos","a","fetch","responce","json","getUser","userId","TodosList","handelSelectUser","userFromServer","useEffect","loadTodosFromServer","todosFromServer","handleSelectChange","event","target","value","filterTodos","filteredTodos","filter","todo","completed","title","toLowerCase","includes","toLocaleLowerCase","handleInputChange","onChange","map","classNames","htmlFor","checked","readOnly","todoId","id","App","Root","ReactDOM","render","document","getElementById"],"mappings":"sPAEaA,EAAa,aACbC,EAAY,YACZC,EAAc,cACdC,EAAe,eAEfC,EAAkB,SAACC,GAAD,MAAsB,CACnDC,KAAMN,EACNK,YAGWE,EAAiB,SAACF,GAAD,MAA2B,CACvDC,KAAML,EACNI,YCLIG,EAAsB,CAC1BC,MAAO,GACPC,KAAM,KACNC,WAAY,GACZC,YAAa,IA+BTC,EAAQC,aA5BE,WAA2C,IAA1CC,EAAyC,uDAAjCP,EAAcQ,EAAmB,uCACxD,OAAQA,EAAOV,MACb,KAAKN,EACH,OAAO,2BACFe,GADL,IAEEN,MAAM,YAAKO,EAAOX,WAEtB,KAAKJ,EACH,OAAO,2BACFc,GADL,IAEEL,KAAMM,EAAOX,UAEjB,KAAKH,EACH,OAAO,2BACFa,GADL,IAEEJ,WAAYK,EAAOX,UAEvB,KAAKF,EACH,OAAO,2BACFY,GADL,IAEEH,YAAaI,EAAOX,UAGxB,QACE,OAAOU,MAMEF,IC5CFI,G,MAAmB,SAACF,GAAD,OAAkBA,EAAMN,QAC3CS,EAAkB,SAACH,GAAD,OAAkBA,EAAML,MAC1CS,EAAgB,SAACJ,GAAD,OAAkBA,EAAMJ,YACxCS,EAAiB,SAACL,GAAD,OAAkBA,EAAMH,a,OCAzCS,EAAwB,WACnC,IAAMC,EAAWC,cAEXb,EAAOc,YAAYN,GAMzB,OAAKR,EAOH,sBAAKe,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SACE,oDAKF,oBAAIA,UAAU,oBAAd,SAAmCf,EAAKgB,OACxC,mBAAGD,UAAU,qBAAb,SAAmCf,EAAKiB,QACxC,mBAAGF,UAAU,qBAAb,SAAmCf,EAAKkB,QACxC,uBACA,wBACEtB,KAAK,SACLuB,QAAS,WAvBbP,EAASf,EAAe,QAqBtB,sBAhBA,oD,gDCdAuB,EAAU,0CAET,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAGEA,EAASC,QAHX,4C,sBCJP,IAAML,EAAU,2CAET,SAAeM,EAAtB,kC,4CAAO,WAAuBC,GAAvB,eAAAL,EAAA,sEACkBC,MAAM,GAAD,OAAIH,GAAJ,OAAcO,IADrC,cACCH,EADD,yBAGEA,EAASC,QAHX,4C,sBCYA,IAAMG,EAAsB,WACjC,IAAMhB,EAAWC,cAEXd,EAAQe,YAAYP,GACpBN,EAAaa,YAAYL,GACzBP,EAAcY,YAAYJ,GAC1BV,EAAOc,YAAYN,GAEnBqB,EAAgB,uCAAG,WAAOF,GAAP,eAAAL,EAAA,sEACMI,EAAQC,GADd,OACjBG,EADiB,OAGvBlB,EAASf,EAAeiC,IAHD,2CAAH,sDAMtBC,qBAAU,WACR,IAAMC,EAAmB,uCAAG,4BAAAV,EAAA,sEACID,IADJ,OACpBY,EADoB,OAG1BrB,EAASlB,EAAgBuC,IAHC,2CAAH,qDAMzBD,MACC,IAEH,IAAME,EAAqB,SAACC,GNhBA,IAACxC,EMiB3BiB,GNjB2BjB,EMiBHwC,EAAMC,OAAOC,MNjBW,CAClDzC,KAAMH,EACNE,cMkBM2C,EAAc,WAClB,IAAIC,EAEJ,OAAQrC,GACN,IAAK,SACHqC,EAAgBxC,EAAMyC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAC3C,MAEF,IAAK,YACHH,EAAgBxC,EAAMyC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAC1C,MAEF,QACEH,EAAa,YAAOxC,GAGxB,OAAOwC,EAAcC,QAAO,SAAAC,GAAI,OAC9BA,EAAKE,MAAMC,cAAcC,SAAS5C,EAAW6C,yBAI3CP,EAAgBD,IAEhBS,EAAoB,SAACZ,GNhDA,IAACxC,EMiD1BiB,GNjD0BjB,EMiDHwC,EAAMC,OAAOC,MNjDW,CACjDzC,KAAMJ,EACNG,aMgDE2C,KAOF,OACE,sBAAKvB,UAAU,WAAf,UACE,yBACEsB,MAAOnC,EACP8C,SAAU,SAACb,GACTD,EAAmBC,IAHvB,UAME,wBAAQE,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,0BAEF,uBACA,uBACEzC,KAAK,OACLyC,MAAOpC,EACP+C,SAAU,SAACb,GACTY,EAAkBZ,MAGtB,wCACA,qBAAKpB,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGwB,EAAcU,KAAI,SAAAR,GAAI,OACrB,qBAEE1B,UAAWmC,IAAW,iBAAkB,CACtC,6BAA8BT,EAAKC,UACnC,0BAA2BD,EAAKC,YAJpC,UAOE,wBAAOS,QAAQ,cAAf,UACE,uBACEC,QAASX,EAAKC,UACd9C,KAAK,WACLyD,UAAQ,IAEV,4BAAIZ,EAAKE,WAEX,gCACE,wBACE5B,UAAU,SACVnB,KAAK,SACLuB,QAAS,WA/CN,IAACmC,IAgDSb,EAAKc,GA/ChC3C,EAASlB,EAAgBK,EAAMyC,QAAO,SAAAC,GAAI,OAAIA,EAAKc,KAAOD,QA2C9C,oBASA,wBACEvC,UAAWmC,IACT,wBACA,SACA,CAAE,mCAAuC,OAAJlD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,MAAOd,EAAKd,SAEzD/B,KAAK,SACLuB,QAAS,kBAAMU,EAAiBY,EAAKd,SAPvC,yBASYc,EAAKd,eAjCdc,EAAKc,eC7ETC,EAhBO,WACpB,OACE,sBAAKzC,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,cAAC,EAAD,YCNJ0C,EAAiB,kBACrB,cAAC,IAAD,CAAUtD,MAAOA,EAAjB,SACE,cAAC,EAAD,OAIJuD,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.0db36392.chunk.js","sourcesContent":["import { Todo, User } from '../react-app-env';\n\nexport const LOAD_TODOS = 'LOAD_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const INPUT_VALUE = 'Input_Value';\nexport const SELECT_VALUE = 'SELECT_VALUE';\n\nexport const loadTodosAction = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User | null) => ({\n  type: LOAD_USER,\n  payload,\n});\n\nexport const setInputValue = (payload: string) => ({\n  type: INPUT_VALUE,\n  payload,\n});\n\nexport const setSelectValue = (payload: string) => ({\n  type: SELECT_VALUE,\n  payload,\n});\n","import { createStore } from 'redux';\nimport { State, Action } from '../react-app-env';\nimport {\n  INPUT_VALUE,\n  LOAD_TODOS,\n  LOAD_USER,\n  SELECT_VALUE,\n} from './actions';\n\nconst initialState: State = {\n  todos: [],\n  user: null,\n  inputValue: '',\n  selectValue: '',\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case INPUT_VALUE:\n      return {\n        ...state,\n        inputValue: action.payload,\n      };\n    case SELECT_VALUE:\n      return {\n        ...state,\n        selectValue: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nexport default store;\n","import { State } from '../react-app-env';\n\nexport const getTodosSelector = (state: State) => state.todos;\nexport const getUserSelector = (state: State) => state.user;\nexport const getInputValue = (state: State) => state.inputValue;\nexport const getSelectValue = (state: State) => state.selectValue;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserAction } from '../../store/actions';\nimport { getUserSelector } from '../../store/selectors';\n\nexport const CurrentUser: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector(getUserSelector);\n\n  const Clear = () => {\n    dispatch(loadUserAction(null));\n  };\n\n  if (!user) {\n    return (\n      <div>No selected user</div>\n    );\n  }\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{user.name}</h3>\n      <p className=\"CurrentUser__email\">{user.email}</p>\n      <p className=\"CurrentUser__phone\">{user.phone}</p>\n      <br />\n      <button\n        type=\"button\"\n        onClick={() => {\n          Clear();\n        }}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import { Todo } from '../react-app-env';\n\nconst API_URL = 'https://mate.academy/students-api/todos';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const responce = await fetch(API_URL);\n\n  return responce.json();\n}\n","const API_URL = 'https://mate.academy/students-api/users/';\n\nexport async function getUser(userId: number) {\n  const responce = await fetch(`${API_URL}${userId}`);\n\n  return responce.json();\n}\n","import React, { useEffect } from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from '../../api/todos';\nimport {\n  loadTodosAction, loadUserAction, setInputValue, setSelectValue,\n} from '../../store/actions';\nimport {\n  getInputValue, getSelectValue, getTodosSelector, getUserSelector,\n} from '../../store/selectors';\nimport { getUser } from '../../api/user';\nimport { Todo } from '../../react-app-env';\n\nexport const TodosList: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const todos = useSelector(getTodosSelector);\n  const inputValue = useSelector(getInputValue);\n  const selectValue = useSelector(getSelectValue);\n  const user = useSelector(getUserSelector);\n\n  const handelSelectUser = async (userId: number) => {\n    const userFromServer = await getUser(userId);\n\n    dispatch(loadUserAction(userFromServer));\n  };\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setSelectValue(event.target.value));\n  };\n\n  const filterTodos = (): Todo[] => {\n    let filteredTodos;\n\n    switch (selectValue) {\n      case 'active':\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filteredTodos = [...todos];\n    }\n\n    return filteredTodos.filter(todo => (\n      todo.title.toLowerCase().includes(inputValue.toLocaleLowerCase())\n    ));\n  };\n\n  const filteredTodos = filterTodos();\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setInputValue(event.target.value));\n    filterTodos();\n  };\n\n  const deleteTodo = (todoId: number) => {\n    dispatch(loadTodosAction(todos.filter(todo => todo.id !== todoId)));\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <select\n        value={selectValue}\n        onChange={(event) => {\n          handleSelectChange(event);\n        }}\n      >\n        <option value=\"all\">all</option>\n        <option value=\"active\">active</option>\n        <option value=\"completed\">completed</option>\n      </select>\n      <br />\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={(event) => {\n          handleInputChange(event);\n        }}\n      />\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={classNames('TodoList__item', {\n                'TodoList__item--unchecked': !todo.completed,\n                'TodoList__item--checked': todo.completed,\n              })}\n            >\n              <label htmlFor=\"searchInput\">\n                <input\n                  checked={todo.completed}\n                  type=\"checkbox\"\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n              <div>\n                <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    deleteTodo(todo.id);\n                  }}\n                >\n                  Remove\n                </button>\n                <button\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    { 'TodoList__user-button--selected': user?.id === todo.userId },\n                  )}\n                  type=\"button\"\n                  onClick={() => handelSelectUser(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { CurrentUser } from './components/CurrentUser/CurrentUser';\nimport { TodosList } from './components/TodosList/TodosList';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodosList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}